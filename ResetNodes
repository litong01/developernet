# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'date'
require 'yaml'
require 'fileutils'


if ENV["LEAP"] == 'DEVELOPMENT'
    FileUtils.cp("provisioning/nodes.dev.conf.yml",
        "onvm/conf/nodes.conf.yml")
    FileUtils.cp("provisioning/ids.dev.conf.yml",
        "onvm/conf/ids.conf.yml")
elsif ENV["LEAP"] == 'PRODUCTION'
    FileUtils.cp("provisioning/nodes.conf.yml",
        "onvm/conf/nodes.conf.yml")
    FileUtils.cp("provisioning/ids.conf.yml",
        "onvm/conf/ids.conf.yml")
end

nodes = YAML.load_file("onvm/conf/nodes.conf.yml")
ids = YAML.load_file("onvm/conf/ids.conf.yml")

Vagrant.configure("2") do |config|
  config.vm.box = "tknerr/managed-server-dummy"
  config.ssh.username = ids['username']
  config.ssh.password = ids['password']

  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.synced_folder "onvm", "/onvm", disabled: false, create: true

  pnodes = {}
  if nodes['ctlnodes']
    nodes['ctlnodes'].each do |key|
       pnodes[nodes['logical2physical'][key]] = {}
    end
  end

  if nodes['computenodes']
    nodes['computenodes'].each do |key|
      pnodes[key] = {}
    end
  end

  open("onvm/conf/hosts", 'w') do | file |
     file.puts "\n"
     pnodes.keys.each do |key|
        file.puts nodes[key]['eth1'] + "\t" + key
     end
  end


  tstamp = Time.now.strftime("%Y%m%d-%H%M")
  pnodes.keys.each do |key|
    config.vm.define "#{key}" do |node|
      node.vm.provider :managed do |managed|
        managed.server = nodes[key]['eth0']
      end

      node.vm.provision "hosts", type: "shell" do |s|
        s.path = "onvm/scripts/reset/setup-hosts.sh"
        s.args = key + ' ' + nodes[key]['eth0'] + ' ' + nodes[key]['eth1']
        s.args += ' ' + nodes['logical2physical'][nodes['ntpserver']]
      end

      node.vm.provision "install-common", type: "shell" do |s|
        s.path = "onvm/scripts/reset/install-common.sh"
      end

      node.vm.provision "save", type: "shell" do |s|
        s.path = "onvm/scripts/reset/save-node.sh"
        s.args = key + ' ' + nodes[key]['eth0'] + ' ' + nodes[key]['eth1']
      end

      node.vm.provision "savebackup", type: "shell" do |s|
        s.path = "onvm/scripts/reset/save-backup.sh"
        s.args = key + ' ' + ids['username'] + ' ' + ids['password']
        s.args += ' ' + nodes['backuphost']
        s.args += ' ' + tstamp
      end

      node.vm.provision "reboot", type: "shell" do |s|
        s.path = "onvm/scripts/reset/boot-node.sh"
      end

      node.vm.provision "reset", type: "shell" do |s|
        s.path = "onvm/scripts/reset/reset-node.sh"
        s.args = key + ' ' + nodes[key]['eth0'] + ' ' + nodes[key]['eth1']
      end

      node.vm.provision "patch", type: "shell" do |s|
        s.path = "onvm/scripts/reset/apply-patch.sh"
      end
    end
  end

end
